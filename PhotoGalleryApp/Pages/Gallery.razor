@page "/"
@page "/gallery"
<PageTitle>Gallery App</PageTitle>
<div class="sidebar">
    <Menu GalleryParameters="galleryParameters" changeCallback="ChangeCallback" refreshCallback="RefreshCallback" />
</div>


<div class="content">
    <div class="d-flex flex-row flex-wrap align-content-start gallery">
        @{
            ImageParameters.SetSeed(seed);
        }
        @for (int i = 0; i < galleryParameters.ImageQuantity; i++)
        {
            imageParameters = ImageParameters.RequestImageParameters(galleryParameters.Resolution, galleryParameters.Orientation);
            URL = $"https://source.unsplash.com/random/{imageParameters.Width}x{imageParameters.Height}/?{galleryParameters.Query}={i}";
            <InteractivePhoto URL="@URL" ImageClicked="ImageClicked" />

        }
    </div>
    <div class="footer">
        <p><a href="https://github.com/Cuttek/Photo-Gallery" target="_blank"><img class="social-logo" src="svg/github-mark-white.svg" /></a></p><p>Images Provided by <a href="https://unsplash.com/" target="_blank">Unsplash</a></p>
    </div>
</div>

<ImageDisplayer URL="@clickedImageURL" @ref="imageDisplayer" />
@code {
    int seed = 1;
    GalleryParameters galleryParameters { get; set; } = new GalleryParameters("Kitten", 12, "Low", "Landscapes");
    ImageParameters imageParameters= new ImageParameters();
    string URL = String.Empty;
    ImageDisplayer? imageDisplayer = new ImageDisplayer();
    string clickedImageURL = String.Empty;
    public void ImageClicked(string url)
    {
        clickedImageURL = url;
        if (imageDisplayer != null)
        {
            imageDisplayer.Show();
        }
    }
    public void ChangeCallback(GalleryParameters gp)
    {
        galleryParameters = gp;
    }
    public void RefreshCallback()
    {
        seed = DateTime.Now.Millisecond;
        StateHasChanged();
    }

}
